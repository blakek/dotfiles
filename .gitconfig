##
# Global Git options
# For documentation, see https://git-scm.com/docs/git-config
##

[alias]
find = grep --extended-regexp --line-number --ignore-case --untracked --full-name
lg = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'
lg1 = log --graph --abbrev-commit --decorate --format=format:'%C(auto)%d%C(reset) %C(bold blue)%h%C(reset) %C(white)%s%C(reset) %C(dim white)- %an, %ar%C(reset)'
lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'
log-simple = log --format=format:'%B'
log-understandable = log --format=format:'%C(bold)%cr, %cN (%cE) created commit %h:%n%C(reset)%B%n'
undo-commit = reset --soft HEAD~1
# catchup = !git stash && git switch $1 && git pull && git switch - && git rebase $1 && git stash pop
count-conflicts = !git merge-tree $(git rev-parse --abbrev-ref HEAD) $(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@') | grep -e '^CONFLICT' | wc -l | tr -d ' '

# [branch]
# # `git pull` will rebase instead of merging; see also pull.rebase
# autosetuprebase = always

[color]
# Use colors in Git commands that are capable of colored output when
# outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
ui = auto

[color "branch"]
current = green reverse
local = green
remote = red

[color "diff-highlight"]
oldNormal = red bold
oldHighlight = red bold 52
newNormal = green bold
newHighlight = green bold 22

[color "diff"]
commit = yellow bold     # commit headers
meta = yellow            # change info
frag = white reverse     # line info
old = red bold           # deletions
new = green bold         # additions
whitespace = red reverse # whitespace errors

[core]
# Global .gitignore file
excludesfile = /Users/blakek/.gitignore

# Make `git rebase` safer on macOS
# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
trustctime = false

# Speed up commands involving untracked files such as `git status`.
# https://git-scm.com/docs/git-update-index#_untracked_cache
untrackedCache = true

[commit]
template = ~/.git-commit-template

[delta]
line-numbers = true
side-by-side = true

[diff]
# Detect copies as well as renames
renames = copies

[diff "textutil"]
textconv = textutil -convert html -stdout

[diff "pandoc"]
textconv = pandoc --to=gfm

[diff "pandoc-text"]
textconv = pandoc --to=plain

[difftool "sourcetree"]
cmd = opendiff \"$LOCAL\" \"$REMOTE\"
path =

[filter "media"]
clean = git-media-clean %f
smudge = git-media-smudge %f

[filter "hawser"]
clean = git hawser clean %f
smudge = git hawser smudge %f
required = true

[filter "lfs"]
clean = git-lfs clean -- %f
smudge = git-lfs smudge -- %f
process = git-lfs filter-process
required = true

[github]
user = blakek

[init]
defaultBranch = main

[mergetool "sourcetree"]
cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
trustExitCode = true

[pager]
diff = delta
log = delta
reflog = delta
show = delta

[pull]
rebase = false
# # `git pull` will rebase instead of merging; see also branch.autosetuprebase
# rebase = true

[push]
# https://git-scm.com/docs/git-config#git-config-pushdefault
# Don't require specifying a remote branch to track
default = current

[user]
name = Blake Knight
email = oss.ideas@gmail.com

# Work-specific configurations
[includeIf "hasconfig:remote.*.url:git@gitlab.com:zapier/**"]
path = ~/dev/dotfiles/hidden_zapier/.gitconfig
[includeIf "hasconfig:remote.*.url:https://gitlab.com/zapier/**"]
path = ~/dev/dotfiles/hidden_zapier/.gitconfig
[includeIf "hasconfig:remote.*.url:https://*gitlab.com/zapier/**"]
path = ~/dev/dotfiles/hidden_zapier/.gitconfig
